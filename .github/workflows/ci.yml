name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: healthcheck
        options: >-
          --health-cmd "pg_isready -U postgres -d healthcheck"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/healthcheck?schema=public
      NEXT_PUBLIC_DB_TIMEOUT: 2500
      NEXT_PUBLIC_ADMIN_TIMEOUT: 5000
      NODE_ENV: development
      APP_ENV: development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Build application
        run: npm run build

      - name: Export next telemetry info
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next
          retention-days: 7
